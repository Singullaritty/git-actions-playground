pipeline {
  agent any

  stages {
      stage('Maven Build') {
            steps {
              sh "mvn clean package -DskipTests=true"
              archive 'target/*.jar' //test webhook
            }
        }
        
      stage('Maven Unit Test') {
        steps {
          sh "mvn test"
        }
      }

      stage('Mutation tests') {
        steps {
          sh "mvn org.pitest:pitest-maven:mutationCoverage"
        }
        post {
          always {
            pitmutation mutationStatsFile: '**/target/pit-reports/**/mutations.xml'
          }
        }
      }

      stage('SonarQUBE - static analysis') {
            steps {
              withSonarQubeEnv('SonarQube') {
                sh """
                mvn clean verify sonar:sonar \
                  -Dsonar.projectKey=playground-app \
                  -Dsonar.projectName='playground-app' \
                  -Dsonar.host.url=http://localhost:9000 \
                """
              }
              timeout(time: 2, unit: 'MINUTES') {
                script {
                  waitForQualityGate abortPipeline: true
                }
              }
            }
        }

      // stage('Vulnerability scan - docker') {
      //   steps {
      //       sh 'mvn dependency-check:check'
      //     }
      //   }

      stage('Docker build & push') {
        steps {
          withDockerRegistry([credentialsId: "docker", url: ""]) {
            sh 'docker build -t lbohdan93/playground-app:""$GIT_COMMIT"" .'
            sh 'docker push lbohdan93/playground-app:""$GIT_COMMIT""'
          }
        }
      }

      stage('k8s deployment') {
          steps {
              withKubeConfig([credentialsId: 'kubeadm']){
              sh "sed -i 's#to_be_replaced#lbohdan93/playground-app:${GIT_COMMIT}#g' k8s_deployment.yaml"
              sh """
                  alias kubectl="minikube kubectl --"
                  kubectl apply -f k8s_deployment.yaml
              """
              }
          }
      }            
    }
  
  post {
    always {
      junit 'target/surefire-reports/*.xml'
      jacoco execPattern: 'target/jacoco.exec'
      // pitmutation mutationStatsFile: '**/target/pit-reports/**/mutations.xml'
      // dependencyCheckPublisher pattern: 'target/dependency-check-report.xml'
    }

    // success {

    // }

    // failure {

    // }
  }
}